import { Stack, TextField, Typography, Button, Box } from "@mui/material";
import { supabase } from '../api/supabase'
import { useContext, useEffect } from "react";
import Cover from "./cover";
import React, { useState, useRef } from "react";
import { useRouter } from 'next/router'
import CloseIcon from '@mui/icons-material/Close';
import Snackbar from '@mui/material/Snackbar';
import MuiAlert from '@mui/material/Alert';
import Image from "next/image";
import { app } from '../api/firebase';
import { onAuthStateChanged } from "firebase/auth";
import { getAuth, signOut } from "firebase/auth";
import { v4 } from "uuid";
import Drawer from '@mui/material/Drawer';
import Head from 'next/head'
import Backdrop from '@mui/material/Backdrop';
import CircularProgress from '@mui/material/CircularProgress';
import barcode from '../../public/barcode.jpg'
import gpay from '../../public/simps/gpay.png'
import usdt from '../../public/simps/tether.png'
import KeyboardArrowLeftOutlinedIcon from '@mui/icons-material/KeyboardArrowLeftOutlined';
import gpaypay from '../../public/barcode1.jpg'
import { getStorage, ref, uploadBytes,getDownloadURL }from "firebase/storage";
export default function Deposit() {
  let loads = 0;
  const [info, setInfo] = useState({})
  const [amount, setAmount] = useState('')
  const [address, setAddress] = useState("")
  const [amthelp, setAmthelp] = useState("")
  const [file, setfile] = useState([]);
  const [imgpath, setImgpath] = useState();
  const [imgurl, setImgurl] = useState();
  const [bottom, setBottom] = useState(false)
  
  //snackbar1
  const [messages, setMessages] = useState("")
  const [opened, setOpened] = useState(false)
  const [dea, setDea] = useState("visible")
  const [deb, setDeb] = useState("hidden")
  const auth = getAuth(app);
  const storage =  getStorage(app,"gs://atalanta-77824.appspot.com");
  const [drop, setDrop] = useState(false)
  const router = useRouter()
  const [dean, setDean] = useState(200)
  const [method,setMethod] = useState()
  const Alert = React.forwardRef(function Alert(props, ref) {
    return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
  });
  //end of snackbar1
  const isMounted = useRef(true);
  useEffect(() => {
    const useri = localStorage.getItem('signedIn');
    if (useri) {
      // User is signed in, see docs for a list of available properties
      // https://firebase.google.com/docs/reference/js/auth.user

      const uid = localStorage.getItem('signUid');
      const name = localStorage.getItem('signName');
      // User is signed in, see docs for a list of available properties
      // https://firebase.google.com/docs/reference/js/auth.user

      // ...
      if (isMounted.current) {
        const GET = async () => {
          const { data, error } = await supabase
            .from('users')
            .select()
            .eq('username', name)
          setInfo(data[0])
          console.log(data)
        }
        GET();
        isMounted.current = false;
      } else {

      }
    } else {
      // User is signed out
      // ...
      signOut(auth);
      console.log('sign out');
      localStorage.removeItem('signedIn');
      localStorage.removeItem('signUid');
      localStorage.removeItem('signName');
      router.push('/login');
    }


  }, []);
  //file upload
  const checkDepo = async (url) => {
    try{
    const uer= localStorage.getItem('signName');
    const { error } = await supabase
      .from('notification')
      .insert({ address: url, username: uer , amount: amount, sent: 'pending', type: "deposit", method: method } )
    setAddress("")
    setAmount("")
    setMessages("The Deposit will reflect in your balance soon")
    handleClick();
    console.log(error)
    setfile([]);
      setDea('visible')
      setDeb('hidden')
      setDrop(false)
      setBottom(false)
    }catch(e){
      
      setDrop(false)
      alert('Please Try again or check your internet connection')
    }
  }
  //firebase
  async function Upload(){
    if (file == null) return;
    const imageRef = ref(storage, `deposit/${v4() + file.name}`);
    uploadBytes(imageRef, file).then(async () => {
        alert("image uploaded");
         getDownloadURL(ref(storage, imageRef)).then(async (url) => {
console.log(url)
checkDepo(url);
         })
        })
  }
  //snackbar2
  const handleClick = () => {
    setOpened(true);
  };

  const handleClosed = (event, reason) => {
    if (reason === 'clickaway') {
      return;
    }

    setOpened(false);
  };
  function Sncks({ message }) {
    return (
      <Snackbar open={opened} autoHideDuration={6000} onClose={handleClosed}>
        <Alert onClose={handleClosed} severity="success" sx={{ width: '100%' }}>
          {message}
        </Alert>
      </Snackbar>
    )
  }
  //end of snackbar2
  return (
    <Cover>
    <div style={{ minHeight: '80vh' }}>
      {
        //start of usdt drawers
      }
      <Drawer
        anchor='bottom'
        open={bottom}
        onClose={() => {
          setBottom(false)
        }}
        style={{ background: '#1A1B72', padding: '8px' }} >
        <Stack style={{ background: '#1A1B72', padding: '8px', }} direction="column" alignItems='center'>
          <CloseIcon style={{ color: '#EE8F00', margin: '12px', width: '30px', height: '30px' }}
            onClick={() => {
              setBottom(false)
            }}
          />
          <div style={{ display: 'flex', justifyContent: "center", padding: '5px', background: '#1A1B72' }}>

            <Typography align='center' style={{ color: '#E5E7EB', fontFamily: 'Poppins, sans-serif', fontSize: '30px' }}>
              Deposit
            </Typography></div>
          <Typography style={{ color: '#E5E7EB' }}>
            {(method === 'usdt') ? 'Please note that the minimum deposit is 10 USDT' : 'Please note that the minimum deposit is 830 ₹'}
           
          </Typography>
          <Stack
            direction="column" spacing={3}
            sx={{
              visibility: dea,
              height: dean,
              background: '#1A1B72'
            }}>
            <TextField variant="standard"
              label="Enter Amount You Wish To Deposit"
              value={amount}
              type="number"
              onChange={(a) => {
                setAmount(a.target.value)
              }}
              helperText={amthelp}
              sx={{
                background: "#E5E7EBsmoke"
              }}
            />
            <Button
              variant="contained"
              onClick={() => {
                if(method === 'usdt'){
                  if (amount < 10 ) {
                  setAmthelp('The Minimum Deposit is 10 USDT');
                     console.log(amount)
                } else {
                    console.log(amount)
                  setDea('hidden')
                  setDeb('visible')
                  setDean(0)
                }
                }else{
                   if (amount < 830 ) {
                  setAmthelp('The Minimum Deposit is 830 ₹');
                      console.log(amount)
                } else {
                      console.log(amount)
                  setDea('hidden')
                  setDeb('visible')
                  setDean(0)
                }
                }
                

              }}>Next</Button>
          </Stack>
          <Stack direction="column" spacing={3} sx={{
            visibility: deb,
          }}>
            <Typography style={{color: "#E5E7EBsmoke",display:(method === 'usdt') ? 'visible' : 'none'}}>ADDRESS NETWORK: TRC20</Typography>
            <Typography style={{ color: "#E5E7EBsmoke" }}> {(method === 'usdt') ? 'Send Your USDT to this Address : ' : 'Scan this Barcode to deposit your Indian Rupees :'} </Typography>
            <div style={{ display: 'flex', justifyContent: 'center' }}>
              <Image src={(method === 'usdt') ? barcode : gpaypay } width={200} height={200} alt='TRC20 Address' style={{ padding: '12px', background: '#E5E7EBsmoke', borderRadius: '5px' }}
              /></div>
            <Typography style={{ color: "black", background: "#E5E7EBsmoke", padding: "4px", cursor: "pointer" }} onClick={() => {
              navigator.clipboard.writeText((method === 'usdt') ? 'TRGvFAEiuwW7cuYJA3dsqRQwazCRwgnA8o' : 'Scan Barcode')
              setMessages("Address Copied")
              handleClick();
            }}>{(method === 'usdt') ? 'TRGvFAEiuwW7cuYJA3dsqRQwazCRwgnA8o' : 'Scan Barcode to pay' }</Typography>

            <Typography variant="caption" sx={{ color: "#E5E7EBsmoke" }}>Click the Address to Copy</Typography>
            <Typography variant="caption" sx={{ color: "#FFE74C" }}>
              
              {(method === 'usdt') ? 'The Minimum Deposit is 10 USDT ,Deposits less than 10 USDT will be ignored.' : 'The Minimum Deposit is 830 ₹, Deposits less than 830 ₹ will be ignored.'}
              After making the Transaction, Please upload a screenshot of the successful Transaction.
            </Typography>
              <input type="file" name="image" accept="image/*" onChange={(e) => {
                setfile(e.target.files[0]);
                console.log(e.target.files[0].name);
              }} />
              <Button variant='contained'  style={{ color: "#E5E7EB" }} onClick={() => {
                if(file.length === 0){
                  alert('Please Upload an Image')
                }else{
                  console.log(file)
                  console.log(file.length);
                  setDrop(true)
                Upload();
                }
              }}>Verify Transaction</Button>

            <Typography variant="caption" style={{ color: "#E5E7EB" }} >Click this Button within 20Mins after depositing to Verify.
              Failure To Verify the Transaction will result in Lost Funds</Typography>
          </Stack>
        </Stack>

      </Drawer>
      {
        //end of usdt drawers
      }
     
      <Backdrop
        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}
        open={drop}
      >
        <CircularProgress color="inherit" />
      </Backdrop>
      <Head>
        <title>Deposit</title>
        <meta name="description" content="Get a percentage bonus on your first deposit" />
        <link rel="icon" href="/logo_afc.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Sncks message={messages} />
      <Stack direction="column" spacing={3} alignItems="center">
        <CloseIcon style={{ color: 'black', margin: '12px', width: '50px', height: '50px' }}
          onClick={() => {
            router.push('/user/inputvalue')
          }}
        />
        <Stack>
          <div style={{ display: 'flex', justifyContent: "center", padding: '5px' }}>

            <Typography align='center' style={{ color: 'black', fontFamily: 'Poppins, sans-serif', fontSize: '36px', fontWeight: 'bold' }}>
              DEPOSIT
            </Typography></div>
          <Typography align='center' style={{ color: 'black', fontFamily: 'Poppins, sans-serif', fontSize: '16px' }}>
            Choose Preferred Payment Method
          </Typography>
        </Stack>
        <Stack direction="row" justifyContent='space-around' spacing={4}>
          <Button onClick={() => {
            setBottom(true)
            setMethod('usdt')
          }}
            sx={{ background: '#1A1B72', width: '145px', height: '136px', borderRadius: '5px' }}
          >
            <Stack direction="column" spacing={2} justifyContent="center" alignItems='center'>

              <Image src={usdt} alt='usdt' width={90} height={70} />
              <Typography sx={{ color: 'black' }}>
                USDT
              </Typography>
            </Stack>
          </Button>

          <Button
            sx={{ background: '#1A1B72', width: '145px', height: '136px', borderRadius: '5px' }}
            onClick={() => {
              setBottom(true)
              setMethod('gpay')
            }}
          >
            <Stack direction="column" spacing={2} justifyContent="center" alignItems='center'>

              <Image src={gpay} alt='gpay' width={60} height={60} />
              <Typography sx={{ color: '#E5E7EB' }}>
                Gpay
              </Typography>
            </Stack>
          </Button>
        </Stack>

        <Typography
          variant="caption"
          sx={{ color: '#DFA100' }}
        >
          GPay is now available !
        </Typography>
      </Stack>
    </div>
      </Cover>
  )
}
